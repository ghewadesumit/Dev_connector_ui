{"version":3,"sources":["img/spinner.gif","store/actions/alert.js","store/actions/types.js","utils/setAuthToken.js","constants/env.js","store/actions/auth.js","components/layout/Navbar.jsx","components/layout/Landing.jsx","components/auth/Register.jsx","components/auth/Login.jsx","components/layout/Alert.js","store/actions/profile.js","components/layout/Spinner.jsx","components/dashboard/Experience.jsx","components/dashboard/Education.jsx","components/dashboard/DashboardAction.jsx","components/dashboard/Dashboard.jsx","components/profile-form/CreateProfile.jsx","components/profile-form/EditProfile.jsx","components/profile-form/AddExperience.jsx","components/profile-form/AddEducation.jsx","components/profiles/ProfileItem.jsx","components/profiles/Profiles.jsx","components/profile/ProfileTop.jsx","components/profile/ProfileAbout.jsx","components/profile/ProfileExperience.jsx","components/profile/ProfileEducation.jsx","components/profile/ProfileGithub.jsx","components/profile/Profile.jsx","components/posts/PostItems.jsx","store/actions/post.js","components/posts/PostForm.jsx","components/posts/Posts.jsx","components/posts/CommentForm.jsx","components/posts/CommentItems.jsx","components/posts/PostComments.jsx","components/routing/PrivateRoute.js","store/reducers/alert.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/post.js","store/reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","API_BASE_URL","process","REACT_APP_DEV_ENVIRONMENT","console","log","baseUrl","loadUser","a","localStorage","get","res","data","Navbar","auth","isAuthenticated","loading","logout","guestLinks","to","authLinks","className","onClick","href","protoTypes","PropTypes","func","isRequired","object","connect","state","isRegistered","register","name","email","password","config","body","JSON","stringify","post","message","useState","confirmPassword","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","action","placeholder","minLength","login","errors","response","forEach","error","required","alerts","alert","length","map","key","createProfile","history","edit","push","statusText","status","Spinner","props","src","spinner","style","width","margin","display","alt","deleteExperience","expId","delete","experience","experiences","exp","_id","company","location","format","from","fromNow","ago","deleteEducation","eduId","education","educations","edu","school","degree","decimal","DashboardAction","profile","getCurrentProfile","deleteProfile","window","confirm","user","useEffect","withRouter","website","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","defaultValue","addExperience","put","title","current","description","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","social","rel","ProfileAbout","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","githubUserName","username","repo","html_url","decription","getProfileById","userId","match","params","addLike","postId","removeLike","deletePost","text","date","likes","comments","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","class","getPost","Component","component","rest","render","initialState","getItem","isModal","inititalState","combineReducers","filter","actions","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","sethAuthToken","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","PostComments","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3cac863.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.14960114.gif\";","import { v4 as uuid } from 'uuid';\r\nimport * as actionTypes from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: actionTypes.SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(\r\n    () => dispatch({ type: actionTypes.REMOVE_ALERT, payload: id }),\r\n    timeout\r\n  );\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const REPOS_ERROR = 'REPOS_ERROR';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const CREATE_PROFILE_SUCCESS = 'CREATE_PROFILE_SUCCESS';\r\nexport const CREATE_PROFILE_FAIL = 'CREATE_PROFILE_FAIL';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const DELETE_EXPERIENCE = 'DELETE_EXPERIENCE';\r\nexport const DELETE_EDUCATION = 'DELETE_EDUCATION';\r\nexport const DELETE_PROFILE = 'DELETE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const GET_POST = 'GET_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","export const API_BASE_URL = process.env.REACT_APP_DEV_ENVIRONMENT ? process.env.REACT_APP_DEVELOPMENT_API_HOST : process.env.REACT_APP_PRODUCTION_API_HOST;\r\nconsole.log(API_BASE_URL);\r\nconsole.log(process.env.REACT_APP_IS_DEV_ENVIRONMENT)\r\nexport const baseUrl = `http://${API_BASE_URL}`;\r\n\r\nconsole.log('base url is', baseUrl)","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport * as actionTypes from './types';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport { baseUrl } from '../../constants/env';\r\n\r\n//Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n\tif (localStorage.token) {\r\n\t\tsetAuthToken(localStorage.token);\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`${baseUrl}/api/auth`);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: actionTypes.USER_LOADED,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({ type: actionTypes.AUTH_ERROR });\r\n\t\t}\r\n\t}\r\n};\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n\t// Stating the data type to be sent\r\n\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\t// Preparing the data to be sent\r\n\tconst body = JSON.stringify({ name, email, password });\r\n\r\n\ttry {\r\n\t\tdebugger;\r\n\t\tconst url = baseUrl;\r\n\t\tconst res = await axios.post(`${baseUrl}/api/users`, body, config);\r\n\r\n\t\tdispatch({ type: actionTypes.REGISTER_SUCCESS, payload: res.data });\r\n\r\n\t\t// dispatch(loadUser());\r\n\r\n\t\tdispatch(setAlert('Registeration Successful', 'success'));\r\n\t} catch (err) {\r\n\t\t// const errors = err.response.data.errors;\r\n\r\n\t\t// if () {\r\n\t\t// \terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t// }\r\n\r\n\t\tdispatch(setAlert(err.message, 'danger'));\r\n\r\n\t\tdispatch({ type: actionTypes.REGISTER_FAIL });\r\n\t}\r\n};\r\n\r\n//Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n\t// Stating the data type to be sent\r\n\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\t// Preparing the data to be sent\r\n\tconst body = JSON.stringify({ email, password });\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(`${baseUrl}/api/auth`, body, config);\r\n\r\n\t\tdispatch({ type: actionTypes.LOGIN_SUCCESS, payload: res.data });\r\n\t\tdispatch(loadUser());\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({ type: actionTypes.LOGIN_FAIL });\r\n\t\t// console.error(err.message);\r\n\t}\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n\tdispatch({ type: actionTypes.LOGOUT });\r\n\tdispatch({ type: actionTypes.CLEAR_PROFILE });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../store/actions/auth';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n\tconst guestLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/profiles'>Developers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/register'>Register</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/login'>Login</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n\r\n\tconst authLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/profiles'>Developers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/posts'>Posts</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/dashboard'>\r\n\t\t\t\t\t<i className='fas fa-user' />{' '}\r\n\t\t\t\t\t<span className='hide-sm'>Dashboard</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={logout} href='#!'>\r\n\t\t\t\t\t<i className='fas fa-sign-out-alt'></i>{' '}\r\n\t\t\t\t\t<span className='hide-sm'>Logout</span>\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<nav className='navbar bg-dark'>\r\n\t\t\t<h1>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<i className='fas fa-code'></i> DevConnector\r\n\t\t\t\t</Link>\r\n\t\t\t</h1>\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n\t\t\t)}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nNavbar.protoTypes = {\r\n\tlogout: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n\tif (isAuthenticated) {\r\n\t\treturn <Redirect to='/dashboard' />;\r\n\t}\r\n\treturn (\r\n\t\t<section className='landing'>\r\n\t\t\t<div className='dark-overlay'>\r\n\t\t\t\t<div className='landing-inner'>\r\n\t\t\t\t\t<h1 className='x-large'>Developer Connector</h1>\r\n\t\t\t\t\t<p className='lead'>\r\n\t\t\t\t\t\tCreate a developer profile/portfolio, share posts and get help from\r\n\t\t\t\t\t\tother developers\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t\t<Link to='register' className='btn btn-primary'>\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to='login' className='btn btn-light'>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nLanding.propTypes = {\r\n\tisAuthenticated: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../store/actions/alert';\r\nimport { register } from '../../store/actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isRegistered }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const { name, email, password, confirmPassword } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setAlert('Password do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isRegistered) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => onSubmit(e)}\r\n        action='create-profile.html'\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isRegistered: state.auth.isRegistered,\r\n});\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isRegistered: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../store/actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign In Your Account\r\n      </p>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => onSubmit(e)}\r\n        action='create-profile.html'\r\n      >\r\n        <input\r\n          type='email'\r\n          placeholder='Email Address'\r\n          name='email'\r\n          value={email}\r\n          onChange={(e) => onChange(e)}\r\n          required\r\n        />\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up </Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from '../actions/alert';\r\nimport * as actionTypes from './types';\r\nimport { baseUrl } from '../../constants/env';\r\n\r\n//Get current user profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/profile/me`);\r\n\t\tdispatch({ type: actionTypes.GET_PROFILE, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Get current all user profile\r\nexport const getProfiles = () => async (dispatch) => {\r\n\tdispatch({ type: actionTypes.CLEAR_PROFILE });\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/profile`);\r\n\t\tdispatch({ type: actionTypes.GET_PROFILES, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Get current user github repo\r\nexport const getGithubRepos = (githubUserName) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/profile/github/${githubUserName}`);\r\n\t\tdispatch({ type: actionTypes.GET_REPOS, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.REPOS_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Get current user profile by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/profile/user/${userId}`);\r\n\t\tdispatch({ type: actionTypes.GET_PROFILE, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Post logined user Profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n\tdispatch\r\n) => {\r\n\ttry {\r\n\t\t// Stating the data type to be sent\r\n\t\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\t\t// Preparing the data to be sent\r\n\t\tconst res = await axios.post(`${baseUrl}/api/profile`, formData, config);\r\n\r\n\t\tdispatch({ type: actionTypes.CREATE_PROFILE_SUCCESS, payload: res.data });\r\n\t\tdispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\t\tif (!edit) history.push('/dashboard');\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n\ttry {\r\n\t\t// Stating the data type to be sent\r\n\t\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\t\t// Preparing the data to be sent\r\n\t\tconst res = await axios.put(`${baseUrl}/api/profile/experience`, formData, config);\r\n\r\n\t\tdispatch({ type: actionTypes.UPDATE_PROFILE, payload: res.data });\r\n\t\tdispatch(setAlert('Experience Added ', 'success'));\r\n\r\n\t\thistory.push('/dashboard');\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n\ttry {\r\n\t\t// Stating the data type to be sent\r\n\t\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\t\t// Preparing the data to be sent\r\n\r\n\t\tconst res = await axios.put(`${baseUrl}/api/profile/education`, formData, config);\r\n\r\n\t\tdispatch({ type: actionTypes.UPDATE_PROFILE, payload: res.data });\r\n\t\tdispatch(setAlert('Education Added ', 'success'));\r\n\r\n\t\thistory.push('/dashboard');\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Delete Profile\r\nexport const deleteProfile = (history) => async (dispatch) => {\r\n\ttry {\r\n\t\tif (\r\n\t\t\twindow.confirm('Are you Sure? Your account would be permanently lost')\r\n\t\t) {\r\n\t\t\tawait axios.delete(`${baseUrl}/api/profile`);\r\n\r\n\t\t\tdispatch({ type: actionTypes.CLEAR_PROFILE });\r\n\t\t\tdispatch({ type: actionTypes.ACCOUNT_DELETED });\r\n\t\t\thistory.push('/login');\r\n\t\t\tdispatch(\r\n\t\t\t\tsetAlert('Your account has been deleted permanently', 'success')\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert('Profile deletion error', 'danger'));\r\n\t}\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = (expId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.delete(`${baseUrl}/api/profile/experience/${expId}`);\r\n\r\n\t\tdispatch({ type: actionTypes.DELETE_EXPERIENCE, payload: res.data });\r\n\t\tdispatch(setAlert('Experience Deleted', 'success'));\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert('Experience not deleted ', 'danger'));\r\n\t}\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = (eduId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.delete(`${baseUrl}/api/profile/education/${eduId}`);\r\n\r\n\t\tdispatch({ type: actionTypes.DELETE_EDUCATION, payload: res.data });\r\n\t\tdispatch(setAlert('Education Deleted', 'success'));\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert('Education not deleted ', 'danger'));\r\n\t}\r\n};\r\n\r\n//Clear Profile\r\nexport const clearProfile = () => (dispatch) => {\r\n\tdispatch({ type: actionTypes.CLEAR_PROFILE });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nconst Spinner = (props) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<img\r\n\t\t\t\tsrc={spinner}\r\n\t\t\t\tstyle={{ width: '200px', margin: 'auto', display: 'block' }}\r\n\t\t\t\talt='Loading'\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteExperience } from '../../store/actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n\tconst experiences = experience.map((exp) => (\r\n\t\t<tr key={exp._id}>\r\n\t\t\t<td>{exp.company}</td>\r\n\t\t\t<td className='hide-sm'>{exp.location}</td>\r\n\t\t\t<td className='hide-sm'>\r\n\t\t\t\t<Moment format='MMM YYYY'>{exp.from}</Moment> -{' '}\r\n\t\t\t\t{exp.to == null ? (\r\n\t\t\t\t\t'Present'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Moment format='MMM YYYY'>{exp.to}</Moment>\r\n\t\t\t\t)}{' '}\r\n\t\t\t\t-{' '}\r\n\t\t\t\t{exp.to == null ? (\r\n\t\t\t\t\t<Moment fromNow ago>\r\n\t\t\t\t\t\t{exp.from}\r\n\t\t\t\t\t</Moment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Moment to={exp.to} ago>\r\n\t\t\t\t\t\t{exp.from}\r\n\t\t\t\t\t</Moment>\r\n\t\t\t\t)}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => deleteExperience(exp._id)}\r\n\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t));\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2 className='my-2'>Experience Credentials</h2>\r\n\t\t\t<table className='table'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className='hide-sm'>Company</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Title</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Years</th>\r\n\t\t\t\t\t\t<th />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{experiences}</tbody>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nExperience.propTypes = {\r\n\texperience: PropTypes.array.isRequired,\r\n\tdeleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteEducation } from '../../store/actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n\tconst educations = education.map((edu) => (\r\n\t\t<tr key={edu._id}>\r\n\t\t\t<td>{edu.school}</td>\r\n\t\t\t<td className='hide-sm'>{edu.degree}</td>\r\n\t\t\t<td className='hide-sm'>\r\n\t\t\t\t<Moment format='MMM YYYY'>{edu.from}</Moment> -{' '}\r\n\t\t\t\t{edu.to == null ? (\r\n\t\t\t\t\t'Present'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Moment format='MMM YYYY'>{edu.to}</Moment>\r\n\t\t\t\t)}{' '}\r\n\t\t\t\t-{' '}\r\n\t\t\t\t{edu.to == null ? (\r\n\t\t\t\t\t<Moment fromNow ago>\r\n\t\t\t\t\t\t{edu.from}\r\n\t\t\t\t\t</Moment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Moment to={edu.to} ago decimal>\r\n\t\t\t\t\t\t{edu.from}\r\n\t\t\t\t\t</Moment>\r\n\t\t\t\t)}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => deleteEducation(edu._id)}\r\n\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t));\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2 className='my-2'>Experience Credentials</h2>\r\n\t\t\t<table className='table'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className='hide-sm'>School</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Degree</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Years</th>\r\n\t\t\t\t\t\t<th />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{educations}</tbody>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nEducation.propTypes = {\r\n\teducation: PropTypes.array.isRequired,\r\n\tdeleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardAction = () => {\r\n\treturn (\r\n\t\t<div className='dash-buttons'>\r\n\t\t\t<Link to='/edit-profile' className='btn btn-light'>\r\n\t\t\t\t<i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n\t\t\t</Link>\r\n\t\t\t<Link to='/add-experience' className='btn btn-light'>\r\n\t\t\t\t<i className='fab fa-black-tie text-primary'></i> Add Experience\r\n\t\t\t</Link>\r\n\t\t\t<Link to='/add-education' className='btn btn-light'>\r\n\t\t\t\t<i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DashboardAction;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteProfile } from '../../store/actions/profile';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport DashboardAction from './DashboardAction';\r\n\r\nconst Dashboard = ({\r\n\tprofile: { profile, loading },\r\n\tauth: { user },\r\n\tgetCurrentProfile,\r\n\tdeleteProfile,\r\n\thistory,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tgetCurrentProfile();\r\n\t}, [getCurrentProfile]);\r\n\r\n\treturn loading && profile === null ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Dashboard</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-user'></i> Welcome {user && user.name}\r\n\t\t\t</p>\r\n\t\t\t{profile !== null ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<DashboardAction />\r\n\t\t\t\t\t<Experience experience={profile.experience} />\r\n\t\t\t\t\t<Education education={profile.education} />\r\n\t\t\t\t\t<div className='my-2'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => deleteProfile(history)}\r\n\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-user-minus'>Delete My Account</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tYou haven't set your profile yet please share your information here\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<Link to='/create-profile' className='btn btn-primary my-1'>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\tClick me\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nDashboard.propTypes = {\r\n\tgetCurrentProfile: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tdeleteProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteProfile })(\r\n\tDashboard\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../store/actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tcompany: '',\r\n\t\twebsite: '',\r\n\t\tlocation: '',\r\n\t\tstatus: '',\r\n\t\tskills: '',\r\n\t\tgithubusername: '',\r\n\t\tbio: '',\r\n\t\ttwitter: '',\r\n\t\tfacebook: '',\r\n\t\tlinkedin: '',\r\n\t\tyoutube: '',\r\n\t\tinstagram: '',\r\n\t});\r\n\r\n\tconst {\r\n\t\tcompany,\r\n\t\twebsite,\r\n\t\tlocation,\r\n\t\tskills,\r\n\t\tgithubusername,\r\n\t\tbio,\r\n\t\ttwitter,\r\n\t\tfacebook,\r\n\t\tlinkedin,\r\n\t\tyoutube,\r\n\t\tinstagram,\r\n\t} = formData;\r\n\r\n\tconst [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n\tconst onChange = (e) =>\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreateProfile(formData, history);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Create Your Profile</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-user'></i> Let's get some information to make your\r\n\t\t\t\tprofile stand out\r\n\t\t\t</p>\r\n\t\t\t<small>* = required field</small>\r\n\t\t\t<form onSubmit={(e) => onSubmit(e)} className='form'>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<select name='status' onChange={(e) => onChange(e)}>\r\n\t\t\t\t\t\t<option value='0'>* Select Professional Status</option>\r\n\t\t\t\t\t\t<option value='Developer'>Developer</option>\r\n\t\t\t\t\t\t<option value='Junior Developer'>Junior Developer</option>\r\n\t\t\t\t\t\t<option value='Senior Developer'>Senior Developer</option>\r\n\t\t\t\t\t\t<option value='Manager'>Manager</option>\r\n\t\t\t\t\t\t<option value='Student or Learning'>Student or Learning</option>\r\n\t\t\t\t\t\t<option value='Instructor'>Instructor or Teacher</option>\r\n\t\t\t\t\t\t<option value='Intern'>Intern</option>\r\n\t\t\t\t\t\t<option value='Other'>Other</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tGive us an idea of where you are at in your career\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Company'\r\n\t\t\t\t\t\tname='company'\r\n\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCould be your own company or one you work for\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Website'\r\n\t\t\t\t\t\tname='website'\r\n\t\t\t\t\t\tvalue={website}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCould be your own or a company website\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Location'\r\n\t\t\t\t\t\tname='location'\r\n\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCity & state suggested (eg. Boston, MA)\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* Skills'\r\n\t\t\t\t\t\tname='skills'\r\n\t\t\t\t\t\tvalue={skills}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tPlease use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Github Username'\r\n\t\t\t\t\t\tname='githubusername'\r\n\t\t\t\t\t\tvalue={githubusername}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tIf you want your latest repos and a Github link, include your\r\n\t\t\t\t\t\tusername\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tplaceholder='A short bio of yourself'\r\n\t\t\t\t\t\tname='bio'\r\n\t\t\t\t\t\tvalue={bio}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<small className='form-text'>Tell us a little about yourself</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='my-2'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-light'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Social Network Links\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<span>Optional</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{displaySocialInputs && (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-twitter fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Twitter URL'\r\n\t\t\t\t\t\t\t\tname='twitter'\r\n\t\t\t\t\t\t\t\tvalue={twitter}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-facebook fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Facebook URL'\r\n\t\t\t\t\t\t\t\tname='facebook'\r\n\t\t\t\t\t\t\t\tvalue={facebook}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-youtube fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='YouTube URL'\r\n\t\t\t\t\t\t\t\tname='youtube'\r\n\t\t\t\t\t\t\t\tvalue={youtube}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-linkedin fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Linkedin URL'\r\n\t\t\t\t\t\t\t\tname='linkedin'\r\n\t\t\t\t\t\t\t\tvalue={linkedin}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-instagram fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Instagram URL'\r\n\t\t\t\t\t\t\t\tname='instagram'\r\n\t\t\t\t\t\t\t\tvalue={instagram}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<input type='submit' className='btn btn-primary my-1' />\r\n\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\r\n\t\t\t\t\tGo Back\r\n\t\t\t\t</Link>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n\tcreateProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../profile-form/CreateProfile';\r\nimport { createProfile } from '../../store/actions/profile';\r\n\r\nconst EditProfile = ({\r\n\tprofile: { profile, loading },\r\n\tcreateProfile,\r\n\thistory,\r\n}) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tcompany: loading || !profile.company ? '' : profile.company,\r\n\t\twebsite: loading || !profile.website ? '' : profile.website,\r\n\t\tlocation: loading || !profile.location ? '' : profile.location,\r\n\t\tstatus: loading || !profile.status ? '' : profile.status,\r\n\t\tskills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n\t\tgithubusername:\r\n\t\t\tloading || !profile.githubusername ? '' : profile.githubusername,\r\n\t\tbio: loading || !profile.bio ? '' : profile.bio,\r\n\t\ttwitter: loading || !profile.twitter ? '' : profile.twitter,\r\n\t\tfacebook: loading || !profile.facebook ? '' : profile.facebook,\r\n\t\tlinkedin: loading || !profile.linkedin ? '' : profile.linkedin,\r\n\t\tyoutube: loading || !profile.youtube ? '' : profile.youtube,\r\n\t\tinstagram: loading || !profile.instagram ? '' : profile.instagram,\r\n\t});\r\n\r\n\tconst {\r\n\t\tcompany,\r\n\t\twebsite,\r\n\t\tlocation,\r\n\t\tstatus,\r\n\t\tskills,\r\n\t\tgithubusername,\r\n\t\tbio,\r\n\t\ttwitter,\r\n\t\tfacebook,\r\n\t\tlinkedin,\r\n\t\tyoutube,\r\n\t\tinstagram,\r\n\t} = formData;\r\n\r\n\tconst [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n\tconst onChange = (e) =>\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreateProfile(formData, history, true);\r\n\t};\r\n\r\n\treturn profile ? (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Create Your Profile</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-user'></i> Let's get some information to make your\r\n\t\t\t\tprofile stand out\r\n\t\t\t</p>\r\n\t\t\t<small>* = required field</small>\r\n\t\t\t<form onSubmit={(e) => onSubmit(e)} className='form'>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\tdefaultValue={status}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value='0'>* Select Professional Status</option>\r\n\t\t\t\t\t\t<option value='Developer'>Developer</option>\r\n\t\t\t\t\t\t<option value='Junior Developer'>Junior Developer</option>\r\n\t\t\t\t\t\t<option value='Senior Developer'>Senior Developer</option>\r\n\t\t\t\t\t\t<option value='Manager'>Manager</option>\r\n\t\t\t\t\t\t<option value='Student or Learning'>Student or Learning</option>\r\n\t\t\t\t\t\t<option value='Instructor'>Instructor or Teacher</option>\r\n\t\t\t\t\t\t<option value='Intern'>Intern</option>\r\n\t\t\t\t\t\t<option value='Other'>Other</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tGive us an idea of where you are at in your career\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Company'\r\n\t\t\t\t\t\tname='company'\r\n\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCould be your own company or one you work for\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Website'\r\n\t\t\t\t\t\tname='website'\r\n\t\t\t\t\t\tvalue={website}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCould be your own or a company website\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Location'\r\n\t\t\t\t\t\tname='location'\r\n\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tCity & state suggested (eg. Boston, MA)\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* Skills'\r\n\t\t\t\t\t\tname='skills'\r\n\t\t\t\t\t\tvalue={skills}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tPlease use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Github Username'\r\n\t\t\t\t\t\tname='githubusername'\r\n\t\t\t\t\t\tvalue={githubusername}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small className='form-text'>\r\n\t\t\t\t\t\tIf you want your latest repos and a Github link, include your\r\n\t\t\t\t\t\tusername\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tplaceholder='A short bio of yourself'\r\n\t\t\t\t\t\tname='bio'\r\n\t\t\t\t\t\tvalue={bio}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<small className='form-text'>Tell us a little about yourself</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='my-2'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-light'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Social Network Links\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<span>Optional</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{displaySocialInputs && (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-twitter fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Twitter URL'\r\n\t\t\t\t\t\t\t\tname='twitter'\r\n\t\t\t\t\t\t\t\tvalue={twitter}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-facebook fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Facebook URL'\r\n\t\t\t\t\t\t\t\tname='facebook'\r\n\t\t\t\t\t\t\t\tvalue={facebook}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-youtube fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='YouTube URL'\r\n\t\t\t\t\t\t\t\tname='youtube'\r\n\t\t\t\t\t\t\t\tvalue={youtube}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-linkedin fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Linkedin URL'\r\n\t\t\t\t\t\t\t\tname='linkedin'\r\n\t\t\t\t\t\t\t\tvalue={linkedin}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group social-input'>\r\n\t\t\t\t\t\t\t<i className='fab fa-instagram fa-2x'></i>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Instagram URL'\r\n\t\t\t\t\t\t\t\tname='instagram'\r\n\t\t\t\t\t\t\t\tvalue={instagram}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<input type='submit' className='btn btn-primary my-1' />\r\n\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\r\n\t\t\t\t\tGo Back\r\n\t\t\t\t</Link>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t) : (\r\n\t\t<Spinner />\r\n\t);\r\n};\r\n\r\nconst mapStatToProps = (state) => ({\r\n\tprofile: state.profile,\r\n});\r\n\r\nEditProfile.propTypes = {\r\n\tcreateProfile: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStatToProps, { createProfile })(\r\n\twithRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../store/actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tcompany: '',\r\n\t\ttitle: '',\r\n\t\tlocation: '',\r\n\t\tfrom: '',\r\n\t\tto: '',\r\n\t\tcurrent: false,\r\n\t\tdescription: '',\r\n\t});\r\n\r\n\tconst { company, title, location, from, to, current, description } = formData;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleCheckBox = () => {\r\n\t\tsetFormData({ ...formData, current: !current });\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\taddExperience(formData, history);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Add An Experience</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-code-branch'></i> Add any developer/programming\r\n\t\t\t\tpositions that you have had in the past\r\n\t\t\t</p>\r\n\t\t\t<small>* = required field</small>\r\n\t\t\t<form onSubmit={(e) => onSubmit(e)} className='form'>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* Job Title'\r\n\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* Company'\r\n\t\t\t\t\t\tname='company'\r\n\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Location'\r\n\t\t\t\t\t\tname='location'\r\n\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<h4>From Date</h4>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\tname='from'\r\n\t\t\t\t\t\tvalue={from}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tname='current'\r\n\t\t\t\t\t\t\tvalue={current}\r\n\t\t\t\t\t\t\tonChange={(e) => handleCheckBox()}\r\n\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\tCurrent Job\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!current && (\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<h4>To Date</h4>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\tname='to'\r\n\t\t\t\t\t\t\tvalue={to}\r\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\trows='5'\r\n\t\t\t\t\t\tplaceholder='Job Description'\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type='submit' className='btn btn-primary my-1' />\r\n\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\r\n\t\t\t\t\tGo Back\r\n\t\t\t\t</Link>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nAddExperience.propTypes = {\r\n\taddExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../store/actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tschool: '',\r\n\t\tdegree: '',\r\n\t\tfrom: '',\r\n\t\tfieldofstudy: '',\r\n\t\tto: '',\r\n\t\tcurrent: false,\r\n\t\tdescription: '',\r\n\t});\r\n\r\n\tconst {\r\n\t\tschool,\r\n\t\tdegree,\r\n\t\tfrom,\r\n\t\tfieldofstudy,\r\n\t\tto,\r\n\t\tcurrent,\r\n\t\tdescription,\r\n\t} = formData;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleCheckBox = () => {\r\n\t\tsetFormData({ ...formData, current: !current });\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\taddEducation(formData, history);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Add An Education</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-code-branch'></i> Add your qualifications\r\n\t\t\t</p>\r\n\t\t\t<small>* = required field</small>\r\n\t\t\t<form onSubmit={(e) => onSubmit(e)} className='form'>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* School'\r\n\t\t\t\t\t\tname='school'\r\n\t\t\t\t\t\tvalue={school}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='* Degree'\r\n\t\t\t\t\t\tname='degree'\r\n\t\t\t\t\t\tvalue={degree}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Field of Study'\r\n\t\t\t\t\t\tname='fieldofstudy'\r\n\t\t\t\t\t\tvalue={fieldofstudy}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<h4>From Date</h4>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\tname='from'\r\n\t\t\t\t\t\tvalue={from}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tname='current'\r\n\t\t\t\t\t\t\tvalue={current}\r\n\t\t\t\t\t\t\tonChange={(e) => handleCheckBox()}\r\n\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\tCurrent School\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!current && (\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<h4>To Date</h4>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\tname='to'\r\n\t\t\t\t\t\t\tvalue={to}\r\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\trows='5'\r\n\t\t\t\t\t\tplaceholder='Education Description'\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type='submit' className='btn btn-primary my-1' />\r\n\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\r\n\t\t\t\t\tGo Back\r\n\t\t\t\t</Link>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nAddEducation.propTypes = {\r\n\taddEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n\tprofile: {\r\n\t\tuser: { _id, name, avatar },\r\n\t\tstatus,\r\n\t\tcompany,\r\n\t\tlocation,\r\n\t\tskills,\r\n\t},\r\n}) => {\r\n\treturn (\r\n\t\t<div className='profile bg-light'>\r\n\t\t\t<img src={avatar} alt='' className='round-img' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{status} {company && <span> at {company}</span>}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='my-1'>{location && <span>{location}</span>} </p>\r\n\t\t\t\t<Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n\t\t\t\t\tView Profile\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{skills.slice(0, 4).map((skill, index) => (\r\n\t\t\t\t\t<li key={index} className='text-primary'>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<i className='fas fa-check'></i>\r\n\t\t\t\t\t\t{skill}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// ProfileItem.propTypes = {};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../store/actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetProfiles();\r\n\t}, [getProfiles]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h1 className='large text-primary'>Developers</h1>\r\n\t\t\t\t\t<p className='lead'>\r\n\t\t\t\t\t\t<i className='fab fa-connectdevelop'></i> Browse and connect with\r\n\t\t\t\t\t\tDevelopers\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div className='profiles'>\r\n\t\t\t\t\t\t{profiles.length > 0 ? (\r\n\t\t\t\t\t\t\tprofiles.map((profile) => (\r\n\t\t\t\t\t\t\t\t<ProfileItem key={profile._id} profile={profile} />\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h4> No profiles found</h4>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n});\r\nProfiles.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n\tgetProfiles: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n\tprofile: {\r\n\t\tstatus,\r\n\t\tcompany,\r\n\t\twebsite,\r\n\t\tlocation,\r\n\t\tsocial,\r\n\t\tuser: { name, avatar },\r\n\t},\r\n}) => {\r\n\treturn (\r\n\t\t<div className='profile-top bg-primary p-2'>\r\n\t\t\t<img className='round-img my-1' src={avatar} alt='' />\r\n\t\t\t<h1 className='large'>{name}</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t{status} at {company && <span>at {company}</span>}\r\n\t\t\t</p>\r\n\t\t\t<p>{location && <span>{location}</span>}</p>\r\n\t\t\t<div className='icons my-1'>\r\n\t\t\t\t{website && (\r\n\t\t\t\t\t<a href={`//${website}`} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t<i className='fas fa-globe fa-2x'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{social && social.twitter && (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={`//${social.twitter}`}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fab fa-twitter fa-2x'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{social && social.facebook && (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={`//${social.facebook}`}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fab fa-facebook fa-2x'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{social && social.youtube && (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={`//${social.youtube}`}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fab fa-youtube fa-2x'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{social && social.instagram && (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={`//${social.instagram}`}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fab fa-instagram fa-2x'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nProfileTop.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n\tprofile: {\r\n\t\tbio,\r\n\t\tskills,\r\n\t\tuser: { name },\r\n\t},\r\n}) => {\r\n\treturn (\r\n\t\t<div className='profile-about bg-light p-2'>\r\n\t\t\t{bio && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h2 className='text-primary'>{`${name.split(' ')[0]}s`}</h2>\r\n\t\t\t\t\t<p>{bio}</p>\r\n\t\t\t\t\t<div className='line'></div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<h2 className='text-primary'>Skill Set</h2>\r\n\t\t\t<div className='skills'>\r\n\t\t\t\t{skills.map((skill, index) => (\r\n\t\t\t\t\t<div key={index} className='p-1'>\r\n\t\t\t\t\t\t<i className='fa fa-check'></i> {skill}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// ProfileAbout.propTypes = {};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n\texperience: { company, title, location, current, to, from, description },\r\n}) => (\r\n\t<div>\r\n\t\t<h3 className='text-dark'>{company}</h3>\r\n\t\t<p>\r\n\t\t\t<Moment format='MMM YYYY'>{from}</Moment> -{' '}\r\n\t\t\t{to == null ? 'Present' : <Moment format='MMM YYYY'>{to}</Moment>} -{' '}\r\n\t\t\t{to == null ? (\r\n\t\t\t\t<Moment fromNow ago>\r\n\t\t\t\t\t{from}\r\n\t\t\t\t</Moment>\r\n\t\t\t) : (\r\n\t\t\t\t<Moment to={to} ago>\r\n\t\t\t\t\t{from}\r\n\t\t\t\t</Moment>\r\n\t\t\t)}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Position:</strong>\r\n\t\t\t{title}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Description:</strong>\r\n\t\t\t{description}\r\n\t\t</p>\r\n\t</div>\r\n);\r\nProfileExperience.propTypes = {\r\n\texperience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n\teducation: { school, fieldofstudy, degree, current, to, from, description },\r\n}) => (\r\n\t<div>\r\n\t\t<h3 className='text-dark'>{school}</h3>\r\n\t\t<p>\r\n\t\t\t<Moment format='MMM YYYY'>{from}</Moment> -{' '}\r\n\t\t\t{to == null ? 'Present' : <Moment format='MMM YYYY'>{to}</Moment>} -{' '}\r\n\t\t\t{to == null ? (\r\n\t\t\t\t<Moment fromNow ago>\r\n\t\t\t\t\t{from}\r\n\t\t\t\t</Moment>\r\n\t\t\t) : (\r\n\t\t\t\t<Moment to={to} ago>\r\n\t\t\t\t\t{from}\r\n\t\t\t\t</Moment>\r\n\t\t\t)}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Degree:</strong>\r\n\t\t\t{degree}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Field of Study:</strong>\r\n\t\t\t{fieldofstudy}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Description:</strong>\r\n\t\t\t{description}\r\n\t\t</p>\r\n\t</div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n\teducation: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../store/actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n\tuseEffect(() => {\r\n\t\tgetGithubRepos(username);\r\n\t}, [getGithubRepos, username]);\r\n\treturn (\r\n\t\t<div className='profile-github'>\r\n\t\t\t<h2 className='text-primary my-1'>Github Repos</h2>\r\n\r\n\t\t\t{repos == null ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : repos.length > 0 ? (\r\n\t\t\t\trepos.map((repo, index) => (\r\n\t\t\t\t\t<div key={repo.id} className='rep bg-white p-1 my-1'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={repo.html_url}\r\n\t\t\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{repo.name}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<p>{repo.decription}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li className='badge badge-primary'>\r\n\t\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='badge badge-dark'>\r\n\t\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<h4>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tEither you have entered a wrong Github username or there are no\r\n\t\t\t\t\tRepositories\r\n\t\t\t\t</h4>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\trepos: state.profile.repos,\r\n});\r\n\r\nProfileGithub.propTypes = {\r\n\tusername: PropTypes.string.isRequired,\r\n\tgetGithubRepos: PropTypes.func.isRequired,\r\n\trepos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../store/actions/profile';\r\n\r\nconst Profile = ({\r\n\tgetProfileById,\r\n\tprofile: { profile, loading },\r\n\tauth,\r\n\tmatch,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id);\r\n\t}, [getProfileById, match]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{profile === null || loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Link to='/profiles' className='btn btn-light'>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\tBack To Profiles\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{auth.isAuthenticated &&\r\n\t\t\t\t\t\tauth.loading === false &&\r\n\t\t\t\t\t\tauth.user._id === profile.user._id && (\r\n\t\t\t\t\t\t\t<Link to='/profiles' className='btn btn-dark'>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='profile-grid my-1'>\r\n\t\t\t\t\t\t<ProfileTop profile={profile} />\r\n\t\t\t\t\t\t<ProfileAbout profile={profile} />\r\n\t\t\t\t\t\t<div className='profile-exp bg-white p-2'>\r\n\t\t\t\t\t\t\t<h2 className='text-primary'>Experience</h2>\r\n\t\t\t\t\t\t\t{profile.experience.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t{profile.experience.map((experience) => (\r\n\t\t\t\t\t\t\t\t\t\t<ProfileExperience\r\n\t\t\t\t\t\t\t\t\t\t\tkey={experience._id}\r\n\t\t\t\t\t\t\t\t\t\t\texperience={experience}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h4>No Experience</h4>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='profile-edu bg-white p-2'>\r\n\t\t\t\t\t\t\t<h2 className='text-primary'>Education</h2>\r\n\t\t\t\t\t\t\t{profile.education.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t{profile.education.map((education) => (\r\n\t\t\t\t\t\t\t\t\t\t<ProfileEducation\r\n\t\t\t\t\t\t\t\t\t\t\tkey={education._id}\r\n\t\t\t\t\t\t\t\t\t\t\teducation={education}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h4>No Education</h4>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{profile.githubusername && (\r\n\t\t\t\t\t\t\t<ProfileGithub username={profile.githubusername} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../store/actions/post';\r\n\r\nconst PostItems = ({\r\n\taddLike,\r\n\tremoveLike,\r\n\tdeletePost,\r\n\tpost,\r\n\tauth: { loading, user },\r\n}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='post bg-white p-1 my-1'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to={`/profile/${post.user}`}>\r\n\t\t\t\t\t\t<img className='round-img' src={post.avatar} alt='' />\r\n\t\t\t\t\t\t<h4>{post.name}</h4>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p className='my-1'>{post.text}</p>\r\n\t\t\t\t\t<p className='post-date'>\r\n\t\t\t\t\t\t<Moment format='MMM YYYY' ago>\r\n\t\t\t\t\t\t\t{post.date}\r\n\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => addLike(post._id)}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-light'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fas fa-thumbs-up'></i>{' '}\r\n\t\t\t\t\t\t{post.likes.length > 0 && <span>{post.likes.length}</span>}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={() => removeLike(post._id)}\r\n\t\t\t\t\t\tclassName='btn btn-light'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fas fa-thumbs-down'></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link to={`/posts/${post._id}`} className='btn btn-primary'>\r\n\t\t\t\t\t\tDiscussion{' '}\r\n\t\t\t\t\t\t{post.comments.length > 0 && (\r\n\t\t\t\t\t\t\t<span className='comment-count'>{post.comments.length}</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{!loading && post.user === user._id && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => deletePost(post._id)}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-times'></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nPostItems.propTypes = {\r\n\tpost: PropTypes.object.isRequired,\r\n\taddLike: PropTypes.func.isRequired,\r\n\tremoveLike: PropTypes.func.isRequired,\r\n\tdeletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n\tPostItems\r\n);\r\n","import * as actionTypes from './types';\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../constants/env';\r\n\r\n// Get all Posts\r\nexport const getPosts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/post`);\r\n\t\tdispatch({ type: actionTypes.GET_POSTS, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Get a Post by Id\r\nexport const getPost = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`${baseUrl}/api/post/${id}`);\r\n\t\tdispatch({ type: actionTypes.GET_POST, payload: res.data });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Update like\r\nexport const addLike = (postId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.put(`${baseUrl}/api/post/like/${postId}`);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.UPDATE_LIKES,\r\n\t\t\tpayload: { response: res.data, postId },\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// add a comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst config = {\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t};\r\n\t\tconst body = JSON.stringify(formData);\r\n\t\tconst res = await axios.post(`${baseUrl}/api/post/comment/${postId}`, body, config);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.ADD_COMMENT,\r\n\t\t\tpayload: { response: res.data, postId },\r\n\t\t});\r\n\t\tdispatch(setAlert('Comment Added', 'success'));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// delete a comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.delete(`${baseUrl}/api/post/comment/${postId}/${commentId}`);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.DELETE_COMMENT,\r\n\t\t\tpayload: { response: res.data, postId },\r\n\t\t});\r\n\t\tdispatch(setAlert('Comment deleted', 'danger'));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = (postId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.put(`${baseUrl}/api/post/unlike/${postId}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.UPDATE_LIKES,\r\n\t\t\tpayload: { response: res.data, postId },\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Delete Like\r\nexport const deletePost = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tawait axios.delete(`${baseUrl}/api/post/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.DELETE_POST,\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t\tdispatch(setAlert('Post Deleted', 'danger'));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Add a post Like\r\nexport const addPost = (formData) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\t\tconst body = JSON.stringify(formData);\r\n\t\tconst res = await axios.post(`${baseUrl}/api/post`, body, config);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.ADD_POST,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tdispatch(setAlert('Post Added', 'success'));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addPost } from '../../store/actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n\tconst [text, setText] = useState('');\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='post-form'>\r\n\t\t\t\t<div className='bg-primary p'>\r\n\t\t\t\t\t<h3>Say Something...</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\taddPost({ text });\r\n\t\t\t\t\t\tsetText('');\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName='form my-1'\r\n\t\t\t\t>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname='text'\r\n\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\trows='5'\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Create a post'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nPostForm.propTypes = {\r\n\taddPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\n// import Moment from 'react-moment';\r\nimport PostItems from './PostItems';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../store/actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetPosts();\r\n\t}, [getPosts]);\r\n\r\n\treturn loading && posts.length <= 0 ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='large text-primary'>Posts</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-user'></i> Welcome to the community!\r\n\t\t\t</p>\r\n\t\t\t<PostForm></PostForm>\r\n\t\t\t<div className='posts'>\r\n\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t<PostItems key={post._id} post={post} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tpost: state.post,\r\n});\r\n\r\nPosts.propTypes = {\r\n\tgetPosts: PropTypes.func.isRequired,\r\n\tpost: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addComment } from '../../store/actions/post';\r\n\r\nconst CommentForm = ({ addComment, postId }) => {\r\n\tconst [text, setText] = useState('');\r\n\treturn (\r\n\t\t<div className='post-form'>\r\n\t\t\t<div className='bg-primary p'>\r\n\t\t\t\t<h3>Leave A Comment</h3>\r\n\t\t\t</div>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\taddComment(postId, { text });\r\n\t\t\t\t\tsetText('');\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='form my-1'\r\n\t\t\t>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tname='text'\r\n\t\t\t\t\tcols='30'\r\n\t\t\t\t\trows='5'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tplaceholder='Comment on this post'\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t></textarea>\r\n\t\t\t\t<input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCommentForm.propTypes = {\r\n\taddComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteComment } from '../../store/actions/post';\r\n\r\nconst CommentItems = ({\r\n\tpost: {\r\n\t\tpost: { user, comments },\r\n\t},\r\n\tauth: {\r\n\t\tloading,\r\n\t\tuser: { _id },\r\n\t},\r\n\tpostId,\r\n\tdeleteComment,\r\n}) => {\r\n\treturn comments.length > 0 ? (\r\n\t\tcomments.map((comment) => (\r\n\t\t\t<Fragment key={comment._id}>\r\n\t\t\t\t<div className='post bg-white p-1 my-1'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a href='profile.html'>\r\n\t\t\t\t\t\t\t<img className='round-img' src={comment.avatar} alt='' />\r\n\t\t\t\t\t\t\t<h4>{comment.name}</h4>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className='my-1'>{comment.text}</p>\r\n\t\t\t\t\t\t<p className='post-date'>\r\n\t\t\t\t\t\t\tPosted on{' '}\r\n\t\t\t\t\t\t\t<Moment format='MMM YYYY' ago>\r\n\t\t\t\t\t\t\t\t{comment.date}\r\n\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t{!loading && _id === comment.user && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tonClick={() => deleteComment(postId, comment._id)}\r\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i class='fas fa-times'></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t))\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t{' '}\r\n\t\t\t<h3>No Comments yet</h3>\r\n\t\t\t<h4> Be the First one to add comment</h4>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tpost: state.post,\r\n\tauth: state.auth,\r\n});\r\n\r\nCommentItems.propTypes = {\r\n\tpost: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\tdeleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItems);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost } from '../../store/actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport Spinner from '../layout/Spinner';\r\nimport CommentItems from './CommentItems';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostComments = ({ getPost, post: { post, loading }, match }) => {\r\n\tuseEffect(() => {\r\n\t\tgetPost(match.params.id);\r\n\t}, [getPost, match]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Link to='/posts' className='btn'>\r\n\t\t\t\tBack To Posts\r\n\t\t\t</Link>\r\n\r\n\t\t\t{loading || post === null ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='post bg-white p-1 my-1'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Link to='/profile'>\r\n\t\t\t\t\t\t\t\t<img className='round-img' src={post.avatar} alt='' />\r\n\t\t\t\t\t\t\t\t<h4>{post.name}</h4>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<p className='my-1'>{post.text}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<CommentForm postId={match.params.id} />\r\n\t\t\t\t\t<div className='comments'>\r\n\t\t\t\t\t\t<CommentItems postId={match.params.id} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tpost: state.post,\r\n});\r\nPostComments.propTypes = {\r\n\tgetPost: PropTypes.func.isRequired,\r\n\tpost: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPost })(PostComments);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n\tcomponent: Component,\r\n\tauth: { isAuthenticated, loading },\r\n\t...rest\r\n}) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\t\trender={(props) =>\r\n\t\t\t!isAuthenticated && !loading ? (\r\n\t\t\t\t<Redirect to='/login' />\r\n\t\t\t) : (\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t)\r\n\t\t}\r\n\t/>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\nPrivateRoute.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import * as actionTypes from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.SET_ALERT:\r\n      return [...state, payload];\r\n    case actionTypes.REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n\ttoken: localStorage.getItem('token'),\r\n\tisRegistered: false,\r\n\tisAuthenticated: null,\r\n\tloading: false,\r\n\tuser: null,\r\n};\r\n\r\nexport default function (state = initialState, actions) {\r\n\tconst { type, payload } = actions;\r\n\tswitch (type) {\r\n\t\tcase actionTypes.USER_LOADED:\r\n\t\t\treturn { ...state, isAuthenticated: true, loading: false, user: payload };\r\n\r\n\t\tcase actionTypes.REGISTER_SUCCESS:\r\n\t\t\treturn { ...state, isRegistered: true };\r\n\r\n\t\tcase actionTypes.LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', payload.token);\r\n\t\t\treturn { ...state, ...payload, isAuthenticated: false, loading: false };\r\n\r\n\t\tcase actionTypes.REGISTER_FAIL:\r\n\t\tcase actionTypes.LOGIN_FAIL:\r\n\t\tcase actionTypes.LOGOUT:\r\n\t\tcase actionTypes.ACCOUNT_DELETED:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisRegistered: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n\tprofile: null,\r\n\tprofiles: [],\r\n\trepos: [],\r\n\tloading: true,\r\n\terror: {},\r\n\tisModal: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\r\n\tswitch (type) {\r\n\t\tcase actionTypes.DELETE_EXPERIENCE:\r\n\t\tcase actionTypes.DELETE_EDUCATION:\r\n\t\tcase actionTypes.UPDATE_PROFILE:\r\n\t\tcase actionTypes.CREATE_PROFILE_SUCCESS:\r\n\t\tcase actionTypes.GET_PROFILE:\r\n\t\t\treturn { ...state, profile: payload, loading: false };\r\n\r\n\t\tcase actionTypes.GET_PROFILES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofiles: payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.GET_REPOS:\r\n\t\t\treturn { ...state, repos: payload, loading: false };\r\n\r\n\t\tcase actionTypes.CREATE_PROFILE_FAIL:\r\n\t\tcase actionTypes.PROFILE_ERROR:\r\n\t\t\treturn { ...state, error: payload, profile: null, loading: false };\r\n\r\n\t\tcase actionTypes.REPOS_ERROR:\r\n\t\t\treturn { ...state, error: payload, repos: [] };\r\n\t\tcase actionTypes.CLEAR_PROFILE:\r\n\t\tcase actionTypes.DELETE_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: null,\r\n\t\t\t\tprofiles: [],\r\n\t\t\t\trepos: [],\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import * as actionTypes from '../actions/types';\r\nconst inititalState = {\r\n\tposts: [],\r\n\tpost: null,\r\n\tloading: true,\r\n\terror: {},\r\n};\r\n\r\nexport default function (state = inititalState, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase actionTypes.GET_POST:\r\n\t\t\treturn { ...state, post: payload, loading: false };\r\n\r\n\t\tcase actionTypes.GET_POSTS:\r\n\t\t\treturn { ...state, posts: payload, loading: false };\r\n\r\n\t\tcase actionTypes.ADD_POST:\r\n\t\t\treturn { ...state, posts: [payload, ...state.posts], loading: false };\r\n\r\n\t\tcase actionTypes.UPDATE_LIKES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.map((post) =>\r\n\t\t\t\t\tpost._id === payload.postId\r\n\t\t\t\t\t\t? { ...post, likes: payload.response }\r\n\t\t\t\t\t\t: post\r\n\t\t\t\t),\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.ADD_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: { ...state.post, comments: payload.response },\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.DELETE_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpost: { ...state.post, comments: payload.response },\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.POST_ERROR:\r\n\t\t\treturn { ...state, error: payload, loading: false };\r\n\r\n\t\tcase actionTypes.DELETE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter((post) => post._id !== payload),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({ alert, auth, profile, post });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateProfile from './components/profile-form/CreateProfile';\r\nimport EditProfile from './components/profile-form/EditProfile';\r\nimport AddExperience from './components/profile-form/AddExperience';\r\nimport AddEducation from './components/profile-form/AddEducation';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport PostComments from './components/posts/PostComments';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport './App.css';\r\n//Redux Provider\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './store/actions/auth';\r\nimport sethAuthToken from './utils/setAuthToken';\r\n\r\nif (localStorage.token) sethAuthToken(localStorage.token);\r\n\r\nconst App = () => {\r\n\tuseEffect(() => {\r\n\t\tstore.dispatch(loadUser());\r\n\t}, []);\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<Router>\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Route exact path='/' component={Landing} />\r\n\t\t\t\t\t<section className='container'>\r\n\t\t\t\t\t\t<Alert />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/register' component={Register} />\r\n\t\t\t\t\t\t\t<Route exact path='/login' component={Login} />\r\n\t\t\t\t\t\t\t<Route exact path='/profiles' component={Profiles} />\r\n\t\t\t\t\t\t\t<Route exact path='/profile/:id' component={Profile} />\r\n\t\t\t\t\t\t\t<PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/create-profile'\r\n\t\t\t\t\t\t\t\tcomponent={CreateProfile}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/edit-profile'\r\n\t\t\t\t\t\t\t\tcomponent={EditProfile}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/add-experience'\r\n\t\t\t\t\t\t\t\tcomponent={AddExperience}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/add-education'\r\n\t\t\t\t\t\t\t\tcomponent={AddEducation}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<PrivateRoute exact path='/posts' component={Posts} />\r\n\t\t\t\t\t\t\t<PrivateRoute exact path='/posts/:id' component={PostComments} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Fragment>\r\n\t\t\t</Router>\r\n\t\t</Provider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}